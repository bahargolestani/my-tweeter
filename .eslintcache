[{"D:\\code\\twitter\\src\\index.js":"1","D:\\code\\twitter\\src\\components\\App.js":"2","D:\\code\\twitter\\src\\components\\layout\\layout.js":"3","D:\\code\\twitter\\src\\components\\theme\\index.js":"4","D:\\code\\twitter\\src\\components\\rightSidebar\\rightSidebar.js":"5","D:\\code\\twitter\\src\\components\\rightSidebar\\styles.js":"6","D:\\code\\twitter\\src\\components\\layout\\styles.js":"7","D:\\code\\twitter\\src\\components\\leftSidebar\\LeftSidebar.js":"8","D:\\code\\twitter\\src\\components\\leftSidebar\\styles.js":"9","D:\\code\\twitter\\src\\components\\layout\\Layout.js":"10","D:\\code\\twitter\\src\\pages\\home\\Home.js":"11","D:\\code\\twitter\\src\\pages\\home\\styles.js":"12","D:\\code\\twitter\\src\\pages\\home\\components\\NewTweet.js":"13","D:\\code\\twitter\\src\\pages\\home\\components\\TweetList.js":"14","D:\\code\\twitter\\src\\pages\\home\\components\\Tweet.js":"15","D:\\code\\twitter\\src\\pages\\home\\tweetByHashtag\\TweetByHashTag.js":"16","D:\\code\\twitter\\src\\components\\header\\Header.js":"17","D:\\code\\twitter\\src\\components\\header\\styles.js":"18","D:\\code\\twitter\\src\\pages\\home\\tweetsByUser\\tweetsByUser.js":"19","D:\\code\\twitter\\src\\pages\\Courses.js":"20","D:\\code\\twitter\\src\\pages\\Posts.js":"21","D:\\code\\twitter\\src\\pages\\PostDetail.js":"22","D:\\code\\twitter\\src\\pages\\404\\404.js":"23","D:\\code\\twitter\\src\\components\\Hoc.js":"24","D:\\code\\twitter\\src\\api\\api_tweet.js":"25","D:\\code\\twitter\\src\\api\\api.js":"26","D:\\code\\twitter\\src\\pages\\home\\components\\Search.js":"27"},{"size":419,"mtime":1611660122481,"results":"28","hashOfConfig":"29"},{"size":1030,"mtime":1612161720396,"results":"30","hashOfConfig":"29"},{"size":538,"mtime":1611753269014,"results":"31","hashOfConfig":"29"},{"size":441,"mtime":1611688618275,"results":"32","hashOfConfig":"29"},{"size":1854,"mtime":1612218078563,"results":"33","hashOfConfig":"29"},{"size":704,"mtime":1611769542542,"results":"34","hashOfConfig":"29"},{"size":529,"mtime":1611847167953,"results":"35","hashOfConfig":"29"},{"size":2603,"mtime":1612218816616,"results":"36","hashOfConfig":"29"},{"size":875,"mtime":1611769980794,"results":"37","hashOfConfig":"29"},{"size":635,"mtime":1612120020056,"results":"38","hashOfConfig":"29"},{"size":991,"mtime":1612264524752,"results":"39","hashOfConfig":"29"},{"size":1697,"mtime":1611847066462,"results":"40","hashOfConfig":"29"},{"size":1921,"mtime":1612219388174,"results":"41","hashOfConfig":"29"},{"size":283,"mtime":1612218255884,"results":"42","hashOfConfig":"29"},{"size":1943,"mtime":1612218859584,"results":"43","hashOfConfig":"29"},{"size":896,"mtime":1612211421440,"results":"44","hashOfConfig":"29"},{"size":416,"mtime":1611849177011,"results":"45","hashOfConfig":"29"},{"size":326,"mtime":1611849065712,"results":"46","hashOfConfig":"29"},{"size":864,"mtime":1612210990888,"results":"47","hashOfConfig":"29"},{"size":415,"mtime":1612038622604,"results":"48","hashOfConfig":"29"},{"size":1106,"mtime":1612086257188,"results":"49","hashOfConfig":"29"},{"size":368,"mtime":1612110100011,"results":"50","hashOfConfig":"29"},{"size":271,"mtime":1612118879800,"results":"51","hashOfConfig":"29"},{"size":171,"mtime":1612120593371,"results":"52","hashOfConfig":"29"},{"size":1132,"mtime":1612219014045,"results":"53","hashOfConfig":"29"},{"size":235,"mtime":1612209696487,"results":"54","hashOfConfig":"29"},{"size":379,"mtime":1612265215384,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},"1pvjmfg",{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"59"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"59"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"59"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"59"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"59"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"59"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"59"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\code\\twitter\\src\\index.js",["120"],"import { ThemeProvider } from '@material-ui/core';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport themeProvider from '@material-ui/styles/ThemeProvider';\nimport theme from './components/theme';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n",["121","122"],"D:\\code\\twitter\\src\\components\\App.js",[],"D:\\code\\twitter\\src\\components\\layout\\layout.js",[],"D:\\code\\twitter\\src\\components\\theme\\index.js",[],"D:\\code\\twitter\\src\\components\\rightSidebar\\rightSidebar.js",["123","124","125"],"import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport useStyle from './styles';\r\nimport { ButtonBase, Grid } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { getHashTags } from '../../api/api_tweet';\r\n\r\nconst RightSidebar = () => {\r\n  const classes = useStyle();\r\n\r\n  const [hashTag, setHashTags] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    getHashTags((isOk, data) => {\r\n      if (!isOk) return alert('ناموفق تو گرفتن لیست یوزرا');\r\n      setHashTags(data);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Link to={'/'}>\r\n        <Grid container direction={'row'} alignItems={'center'}>\r\n          <Grid item>\r\n            <img\r\n              src={'/images/logo.png'}\r\n              style={{ width: '30px', height: '30px' }}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography className={classes.logoType}>توییتر فارسی</Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Link>\r\n      <Typography className={classes.hashTagTitle}>داغ ترین هشتگ ها</Typography>\r\n      <Grid container direction={'column'} alignItems={'center'}>\r\n        {hashTag.map((item, i) => (\r\n          <ButtonBase key={i} className={classes.hashTagParent}>\r\n            <Link to={'/hashtags/' + item} style={{ with: '100%' }}>\r\n              <Grid item container>\r\n                <img\r\n                  src={'/images/hashtag.png'}\r\n                  style={{ width: '20px', height: '20px', marginTop: '1rem' }}\r\n                />\r\n                <Typography className={classes.hashtag}>{item}</Typography>\r\n              </Grid>\r\n            </Link>\r\n          </ButtonBase>\r\n        ))}\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RightSidebar;\r\n","D:\\code\\twitter\\src\\components\\rightSidebar\\styles.js",[],"D:\\code\\twitter\\src\\components\\layout\\styles.js",[],"D:\\code\\twitter\\src\\components\\leftSidebar\\LeftSidebar.js",["126","127","128"],"import React from 'react';\r\nimport useStyle from './styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { ButtonBase, Divider } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { getUsers } from '../../api/api_tweet';\r\n\r\nconst Tweeter = ({ name, id, img }) => {\r\n  const classes = useStyle();\r\n  return (\r\n    <ButtonBase style={{ width: '100%' }}>\r\n      <Grid container direction={'row'} className={classes.tweeterParent}>\r\n        <img src={img} style={{ width: 50 }} />\r\n        <Grid\r\n          item\r\n          container\r\n          direction={'column'}\r\n          style={{ width: 'max-content' }}\r\n          className={classes.tweeterNameParent}\r\n        >\r\n          <Typography className={classes.profName}>{name}</Typography>\r\n          <Typography className={classes.profId}>{id}</Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </ButtonBase>\r\n  );\r\n};\r\n\r\nconst LeftSidebar = () => {\r\n  const [users, setUsers] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    getUsers((isOk, data) => {\r\n      if (!isOk) return alert('ناموفق تو گرفتن لیست یوزرا');\r\n      setUsers(data);\r\n    });\r\n  }, []);\r\n\r\n  const classes = useStyle();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container direction={'row-reverse'}>\r\n        <img src={'/images/user img.png'} style={{ width: 'max-content' }} />\r\n        <Grid\r\n          item\r\n          container\r\n          direction={'column'}\r\n          style={{ width: 'max-content' }}\r\n        >\r\n          <Typography className={classes.profName}>محمد مطواعی</Typography>\r\n          <Typography className={classes.profId}>Mohamad.metvayi</Typography>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item container direction={'column'} className={classes.tweeterRoot}>\r\n        <Typography className={classes.tweeterTitle}>\r\n          بهترین خبرنگاران\r\n        </Typography>\r\n        <Divider style={{ marginLeft: -24, marginRight: -24 }} />\r\n        {users.map((item, index) => {\r\n          return (\r\n            <Link\r\n              key={item.id}\r\n              to={`/users/${item.name}`}\r\n              style={{ width: '100%' }}\r\n            >\r\n              <Tweeter name={item.name} id={item.id} img={item.img} />\r\n              {index !== users.length - 1 && (\r\n                <Divider style={{ marginLeft: -24, marginRight: -24 }} />\r\n              )}\r\n            </Link>\r\n          );\r\n        })}\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LeftSidebar;\r\n","D:\\code\\twitter\\src\\components\\leftSidebar\\styles.js",[],"D:\\code\\twitter\\src\\components\\layout\\Layout.js",[],"D:\\code\\twitter\\src\\pages\\home\\Home.js",["129","130"],"D:\\code\\twitter\\src\\pages\\home\\styles.js",[],"D:\\code\\twitter\\src\\pages\\home\\components\\NewTweet.js",["131","132","133","134","135"],"import React from 'react';\r\nimport useStyle from '../styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Button, IconButton, Input, Typography } from '@material-ui/core';\r\nimport classnames from 'classnames';\r\nimport axios from 'axios';\r\nimport { newTweetRequest } from '../../../api/api_tweet';\r\n\r\nconst NewTweet = () => {\r\n  const classes = useStyle();\r\n  const input = React.useRef();\r\n\r\n  //const [tweet, setTweet] = React.useState();\r\n\r\n  const newTweetClick = () => {\r\n    console.log('clicked');\r\n    const tweetText = input.current.innerText;\r\n    if (!tweetText) return;\r\n    const data = {\r\n      id: Math.floor(Math.random() * 1000),\r\n      sender: {\r\n        name: 'Mohamad',\r\n        id: '@mohamad.unique',\r\n        img: '/images/samsung.png',\r\n      },\r\n      text: tweetText,\r\n      likes: 9,\r\n    };\r\n    newTweetRequest(data, (res, isOk) => {\r\n      console.log('res', res);\r\n      if (!isOk) return alert('ارسال نشد');\r\n      alert('ارسال شد');\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.newTweet}>\r\n      <Grid container>\r\n        <img src={'/images/user img.png'} style={{ width: 'max-content' }} />\r\n        <div\r\n          contentEditable\r\n          placeholder={'توییت کن ...'}\r\n          className={classnames(classes.input, 'editable')}\r\n          data-placeholder=\"توییت کن ...\"\r\n          ref={input}\r\n        />\r\n      </Grid>\r\n      <Grid container direction={'row-reverse'} style={{ marginTop: 16 }}>\r\n        <Button\r\n          variant={'contained'}\r\n          color={'primary'}\r\n          className={classes.newTweetBtn}\r\n          onClick={newTweetClick}\r\n        >\r\n          توییت\r\n        </Button>\r\n        <IconButton className={classes.newTweetImgBtn}>\r\n          <img src={'/images/tweetpic.png'} className={classes.newTweetImg} />\r\n        </IconButton>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewTweet;\r\n","D:\\code\\twitter\\src\\pages\\home\\components\\TweetList.js",[],"D:\\code\\twitter\\src\\pages\\home\\components\\Tweet.js",["136","137","138","139"],"import { Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport useStyle from '../styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Button, IconButton, Input } from '@material-ui/core';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\n\r\nconst Tweet = ({ data }) => {\r\n  const classes = useStyle();\r\n  console.log('data', data);\r\n  if (!data.sender) return null;\r\n  const renderTweet = (text) => {\r\n    return {\r\n      __html: text.replace(\r\n        /#\\S+/g,\r\n        '<a href=\"/tags/$&\" style=\"color:cornflowerblue\">$&</a>'\r\n      ),\r\n    };\r\n  };\r\n\r\n  return (\r\n    <div className={classes.tweetItem}>\r\n      <Grid container>\r\n        <img src={data.sender.img} style={{ height: 'max-content' }} />\r\n        <Grid\r\n          item\r\n          container\r\n          direction={'column'}\r\n          style={{ flex: 1, marginRight: '1rem' }}\r\n        >\r\n          <Grid item container>\r\n            <Typography className={classes.tweetItemName}>\r\n              {data.sender.name}\r\n            </Typography>\r\n            <Typography className={classes.tweetItemId}>\r\n              {data.sender.id}\r\n            </Typography>\r\n          </Grid>\r\n          <Typography\r\n            dangerouslySetInnerHTML={renderTweet(data.text)}\r\n            className={classes.tweetText}\r\n            component={'p'}\r\n          ></Typography>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid\r\n        container\r\n        direction={'row-reverse'}\r\n        style={{ marginTop: 16 }}\r\n        alignItems={'center'}\r\n      >\r\n        <IconButton className={classes.newTweetImgBtn}>\r\n          <img src={'/images/retweet.png'} className={classes.newTweetImg} />\r\n        </IconButton>\r\n        <IconButton className={classes.newTweetImgBtn}>\r\n          <FavoriteIcon />\r\n        </IconButton>\r\n        <Typography className={classes.likeCount}>{data.likes}</Typography>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tweet;\r\n","D:\\code\\twitter\\src\\pages\\home\\tweetByHashtag\\TweetByHashTag.js",["140","141"],"import React from 'react';\r\nimport useStyle from '../styles';\r\nimport Header from '../../../components/header/Header';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport TweetList from '../components/TweetList';\r\nimport axios from 'axios';\r\nimport { getAllTweets } from '../../../api/api_tweet';\r\n\r\nconst TweetByHashTag = (props) => {\r\n  const [tweets, setTweets] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    getAllTweets((isOk, data) => {\r\n      if (!isOk) return alert('ناموفق بود');\r\n      setTweets(data);\r\n    });\r\n  }, []);\r\n\r\n  const classes = useStyle();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Header\r\n        title={props.match.params.hashtag}\r\n        icon={<img src={'/images/hashtag.png'} />}\r\n      />\r\n      <Divider className={classes.divider} />\r\n      <TweetList data={tweets} />\r\n    </div>\r\n  );\r\n};\r\nexport default TweetByHashTag;\r\n","D:\\code\\twitter\\src\\components\\header\\Header.js",["142"],"import React from 'react';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport { Typography } from '@material-ui/core';\r\nimport useStyle from './styles';\r\n\r\nconst Header = ({ title, icon }) => {\r\n  const classes = useStyle();\r\n  return (\r\n    <div className={classes.header}>\r\n      {icon}\r\n      <Typography className={classes.headerTitle}>{title}</Typography>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","D:\\code\\twitter\\src\\components\\header\\styles.js",[],"D:\\code\\twitter\\src\\pages\\home\\tweetsByUser\\tweetsByUser.js",[],"D:\\code\\twitter\\src\\pages\\Courses.js",[],["143","144"],"D:\\code\\twitter\\src\\pages\\Posts.js",[],"D:\\code\\twitter\\src\\pages\\PostDetail.js",[],"D:\\code\\twitter\\src\\pages\\404\\404.js",["145"],"import React from 'react';\r\n\r\nconst P404 = () => {\r\n  return (\r\n    <div>\r\n      <h1>404</h1>\r\n      <p>we didn't find the page you serched for </p>\r\n      <p>\r\n        <img src={'/images/404-error-page.png'} />\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default P404;\r\n","D:\\code\\twitter\\src\\components\\Hoc.js",[],"D:\\code\\twitter\\src\\api\\api_tweet.js",[],"D:\\code\\twitter\\src\\api\\api.js",[],"D:\\code\\twitter\\src\\pages\\home\\components\\Search.js",[],{"ruleId":"146","severity":1,"message":"147","line":5,"column":8,"nodeType":"148","messageId":"149","endLine":5,"endColumn":21},{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","replacedBy":"153"},{"ruleId":"146","severity":1,"message":"154","line":6,"column":8,"nodeType":"148","messageId":"149","endLine":6,"endColumn":13},{"ruleId":"155","severity":1,"message":"156","line":26,"column":13,"nodeType":"157","endLine":29,"endColumn":15},{"ruleId":"155","severity":1,"message":"156","line":42,"column":17,"nodeType":"157","endLine":45,"endColumn":19},{"ruleId":"146","severity":1,"message":"154","line":7,"column":8,"nodeType":"148","messageId":"149","endLine":7,"endColumn":13},{"ruleId":"155","severity":1,"message":"156","line":15,"column":9,"nodeType":"157","endLine":15,"endColumn":48},{"ruleId":"155","severity":1,"message":"156","line":45,"column":9,"nodeType":"157","endLine":45,"endColumn":78},{"ruleId":"146","severity":1,"message":"158","line":2,"column":17,"nodeType":"148","messageId":"149","endLine":2,"endColumn":26},{"ruleId":"146","severity":1,"message":"154","line":8,"column":8,"nodeType":"148","messageId":"149","endLine":8,"endColumn":13},{"ruleId":"146","severity":1,"message":"159","line":4,"column":30,"nodeType":"148","messageId":"149","endLine":4,"endColumn":35},{"ruleId":"146","severity":1,"message":"160","line":4,"column":37,"nodeType":"148","messageId":"149","endLine":4,"endColumn":47},{"ruleId":"146","severity":1,"message":"154","line":6,"column":8,"nodeType":"148","messageId":"149","endLine":6,"endColumn":13},{"ruleId":"155","severity":1,"message":"156","line":39,"column":9,"nodeType":"157","endLine":39,"endColumn":78},{"ruleId":"155","severity":1,"message":"156","line":58,"column":11,"nodeType":"157","endLine":58,"endColumn":79},{"ruleId":"146","severity":1,"message":"161","line":5,"column":10,"nodeType":"148","messageId":"149","endLine":5,"endColumn":16},{"ruleId":"146","severity":1,"message":"159","line":5,"column":30,"nodeType":"148","messageId":"149","endLine":5,"endColumn":35},{"ruleId":"155","severity":1,"message":"156","line":24,"column":9,"nodeType":"157","endLine":24,"endColumn":72},{"ruleId":"155","severity":1,"message":"156","line":53,"column":11,"nodeType":"157","endLine":53,"endColumn":78},{"ruleId":"146","severity":1,"message":"154","line":6,"column":8,"nodeType":"148","messageId":"149","endLine":6,"endColumn":13},{"ruleId":"155","severity":1,"message":"156","line":24,"column":15,"nodeType":"157","endLine":24,"endColumn":50},{"ruleId":"146","severity":1,"message":"162","line":2,"column":8,"nodeType":"148","messageId":"149","endLine":2,"endColumn":16},{"ruleId":"150","replacedBy":"163"},{"ruleId":"152","replacedBy":"164"},{"ruleId":"155","severity":1,"message":"156","line":9,"column":9,"nodeType":"157","endLine":9,"endColumn":51},"no-unused-vars","'themeProvider' is defined but never used.","Identifier","unusedVar","no-native-reassign",["165"],"no-negated-in-lhs",["166"],"'axios' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","'Input' is defined but never used.","'Typography' is defined but never used.","'Button' is defined but never used.","'HomeIcon' is defined but never used.",["165"],["166"],"no-global-assign","no-unsafe-negation"]